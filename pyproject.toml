[project]
name = "cts-recommender"
version = "0.1.0"
description = "Contextual movie recommender (CTS) â€” codebase"
readme = "README.md"
requires-python = ">=3.9,<3.13"
authors = [{ name = "Theo Maetz", email = "theo.maetz@gmail.com" }]
dependencies = [
    "pandas>=2.3.2",
    "pyarrow>=21.0.0",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.10.1",
    "pyreadr>=0.5.3",
    "requests>=2.32.5",
    "tqdm>=4.67.1",
    "scikit-learn>=1.6.1",
    "scipy>=1.11.0",
    "lxml>=6.0.2",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]

[tool.ruff]
line-length = 100

[dependency-groups]
dev = [
    "ipykernel>=6.30.1",
    "lxml-stubs>=0.5.1",
    "pytest>=8.4.2",
    "scikit-learn>=1.6.1",
    "types-lxml>=2025.8.25",
]
notebooks = [
    "ipywidgets>=8.1.7",
    "jupyterlab>=4.4.7",
    "matplotlib>=3.9.4",
    "tqdm>=4.67.1",
]

[project.scripts]
cts-reco-prepare-programming = "cts_recommender.cli.prepare_programming:main"
cts-reco-train-audience-ratings = "cts_recommender.cli.train_audience_ratings:main"
cts-reco-extract-whatson = "cts_recommender.cli.whatson_extraction:main"
cts-reco-historical-programming = "cts_recommender.cli.historical_programming:main"
cts-reco-extract-IL-training-data = "cts_recommender.cli.IL_training_data:main"
cts-reco-train-curator-model = "cts_recommender.cli.train_curator_model:main"
